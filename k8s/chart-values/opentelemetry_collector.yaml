---
mode: deployment
namespaceOverride: riset

image:
  repository: otel/opentelemetry-collector-contrib
  tag: 0.137.0
command:
  name: otelcol-contrib

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: Exists
            - key: kubernetes.io/arch
              operator: In
              values: [amd64]

resources:
  limits:
    cpu: 1
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 400Mi

extraEnvs:
  - name: OTELCOL_URL
    valueFrom:
      secretKeyRef:
        name: otelcol-secrets
        key: url
  - name: OTELCOL_TOKEN
    valueFrom:
      secretKeyRef:
        name: otelcol-secrets
        key: token
  - name: OTELCOL_ORG
    valueFrom:
      secretKeyRef:
        name: otelcol-secrets
        key: org
  - name: OTELCOL_BUCKET
    valueFrom:
      secretKeyRef:
        name: otelcol-secrets
        key: bucket

ports:
  jaeger-compact:
    enabled: false
  jaeger-thrift:
    enabled: false
  jaeger-grpc:
    enabled: false
  zipkin:
    enabled: false

config:
  receivers:
    otlp: {}
    prometheus:
      config:
        scrape_configs:
          - job_name: "node_exporters"
            scrape_interval: 1m
            # FIXME: should be replaced with dynamic discovery
            static_configs:
              - targets:
                  - k8s-slave-1-raspberrypi-4:9100
                  - k8s-slave-2-vm:9100
                  - k8s-slave-3-raspberrypi-4:9100
                  - k8s-slave-4-raspberrypi-4:9100

  exporters:
    debug:
      verbosity: basic
    influxdb:
      endpoint: ${env:OTELCOL_URL}
      token: ${env:OTELCOL_TOKEN}
      org: ${env:OTELCOL_ORG}
      bucket: ${env:OTELCOL_BUCKET}

  service:
    pipelines:
      metrics:
        receivers: [otlp, prometheus]
        exporters: [influxdb, debug]
