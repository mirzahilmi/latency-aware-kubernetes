# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.2/deployment.json
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hellopod
  namespace: riset
spec:
  replicas: 9
  selector:
    matchLabels:
      app: hellopod
    matchExpressions:
      - key: node-role.kubernetes.io/control-plane
        operator: DoesNotExist
  template:
    metadata:
      labels:
        app: hellopod
    spec:
      containers:
        - name: hellopod-app
          image: ghcr.io/mirzahilmi/hellopod:0.1.0
          ports:
            - containerPort: 8080
              protocol: TCP

          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: POD_MEM_LIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP

          # # disabled for now, bcs i havent provide the endpoint yet
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 8080
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 8080

          resources:
            limits:
              memory: 500Mi
            requests:
              memory: 500Mi
              cpu: "1"

          # per-container security context
          # lock down privileges inside the container
          securityContext:
            allowPrivilegeEscalation: false # prevent sudo, etc.
            privileged: false # prevent acting like host root

      terminationGracePeriodSeconds: 600

      # per-pod security context
      # enable seccomp and force non-root user
      securityContext:
        seccompProfile:
          type: RuntimeDefault # enable seccomp and the runtimes default profile

        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
