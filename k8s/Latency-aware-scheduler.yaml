apiVersion: v1
kind: ServiceAccount
metadata:
  name: latency-aware-scheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: latency-aware-scheduler-cluster-admin
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    namespace: kube-system
    name: latency-aware-scheduler
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: latency-aware-scheduler-config
  namespace: kube-system
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1
    kind: KubeSchedulerConfiguration
    schedulerName: latency-aware-scheduler
    algorithmSource:
      policy:
        configMap:
          namespace: kube-system
          name: latency-aware-scheduler-policy
    leaderElection:
      leaderElect: true
      resourceName: latency-aware-scheduler
      resourceNamespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: latency-aware-scheduler-policy
  namespace: kube-system
data:
  policy.cfg: |
    {
      "apiVersion": "v1",
      "kind": "Policy",
      "predicates": [
        {"name": "PodFitsHostPorts"},
        {"name": "PodFitsResources"},
        {"name": "NoDiskConflict"},
        {"name": "MatchNodeSelector"},
        {"name": "HostName"}
      ],
      "priorities": [
        {"name": "LeastRequestedPriority", "weight": 1},
        {"name": "BalancedResourceAllocation", "weight": 1},
        {"name": "ServiceSpreadingPriority", "weight": 1}
      ],
      "extenders": [
        {
          "urlPrefix": "http://localhost:3001",
          "filterVerb": "filter",
          "prioritizeVerb": "score",
          "weight": 5,
          "enableHttps": false,
          "nodeCacheCapable": true,
          "ignorable": true
        }
      ],
      "hardPodAffinitySymmetricWeight": 10
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: latency-aware-scheduler
  namespace: kube-system
  labels:
    app: latency-aware-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: latency-aware-scheduler
  template:
    metadata:
      labels:
        app: latency-aware-scheduler
    spec:
      serviceAccountName: latency-aware-scheduler
      volumes:
        - name: scheduler-config
          configMap:
            name: latency-aware-scheduler-config
      containers:
        # === Container 1: kube-scheduler instance ===
        - name: kube-scheduler
          image: registry.k8s.io/kube-scheduler:v1.29.3
          command:
            - kube-scheduler
            - --config=/etc/kube-scheduler/config.yaml
            - -v=4
          volumeMounts:
            - name: scheduler-config
              mountPath: /etc/kube-scheduler
        # === Container 2: extender ===
        - name: latency-aware-extender
          image: ghcr.io/mirzahilmi/latency-aware-scheduler:latest
          imagePullPolicy: Always
          env:
            - name: CONFIG_PATH
              value: "/etc/scheduler/config.json"
            - name: INFLUX_HOST
              value: "http://influxdb.riset.svc.cluster.local:8086"
            - name: INFLUX_TOKEN
              valueFrom:
                secretKeyRef:
                  name: influxdb-secret
                  key: token
            - name: INFLUX_ORG
              value: "lab-riset"
            - name: INFLUX_BUCKET
              value: "node_metrics"
            - name: PROBER_ENDPOINT
              value: "scores"
            - name: PROBER_PORT
              value: "8080"
            - name: LOG_LEVEL
              value: "debug"
          ports:
            - containerPort: 3001
          volumeMounts:
            - name: scheduler-config
              mountPath: /etc/scheduler
